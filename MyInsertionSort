package selfDSA;
import java.util.Arrays;

// - insertion sort is comparison based sorting
// - partially sort by LHS after every pass. (stable)

public class MyInsertionSort {
    public static void main(String[] args){
        int[] arr = {-6,6,4,-9,0,3,4,1,8};  //input
        myInsertionSort(arr);
        System.out.println(Arrays.toString(arr));
    }

    static void myInsertionSort(int[] arr ){ //  function for insertion sort.
        for( int i = 1; i < arr.length; i++){ // outer loop will run length-1 times.
            for( int j = i;  j>0; j--){ // inner loop will sort array upto current "i".
                if(arr[j]<arr[j-1]) {
                    //swap
                    int temp = arr[j];
                    arr[j] = arr[j - 1];
                    arr[j - 1] = temp;
                }
                else{
                    break;      // do not need to check because array is sorted.
                }
            }

        }

    }
}

// time complexity
// best case -  O(n)
// worst case - O(n^2)
