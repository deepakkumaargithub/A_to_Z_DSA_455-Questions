

class Solution{
    static int searchInSorted(int arr[], int N, int K)
    {
        
      int low =  0;                    //low value
      int high = N-1;                  //high value
      
      while( low<=high){ 
          int mid = low + (high-low)/2; //finding mid
          
          if( arr[mid] == K)   // checking if mid == k then its our answer.
              return 1;
          
          else if(arr[mid]>K)      // if arr[mid] value is greater than k,then it means it present on
                              //left side of the mid index,update  high value.
              high =  mid-1;
          
          else if(arr[mid]<K)    // if arr[mid] value is greater than k,then it means it present on
                       //left side of the mid index,update  high value.
            low = mid+1;
          
      }
      return -1;  // if k not found in array.
    }
}


//TC = O(logn)
//spac = O(1)
